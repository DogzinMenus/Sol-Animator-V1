local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- POSI√á√ÉO INICIAL DO JOGADOR
local initialCFrame = hrp.CFrame
local lastPosition = hrp.Position
local idleTime = 0

RunService.Heartbeat:Connect(function(delta)
if (hrp.Position - lastPosition).magnitude < 0.1 then
idleTime = idleTime + delta
if idleTime >= 1 then
hrp.CFrame = initialCFrame
end
else
idleTime = 0
lastPosition = hrp.Position
end
end)

-- CRIA√á√ÉO DO SCREEN GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SolAnimatorV1"
screenGui.ResetOnSpawn = false
screenGui.Parent = CoreGui

-- INTRO ANIMADA AVAN√áADA
local introFrame = Instance.new("Frame")
introFrame.Size = UDim2.new(1, 0, 1, 0)
introFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
introFrame.BackgroundTransparency = 1
introFrame.Parent = screenGui

-- Tween de fade in do fundo
TweenService:Create(introFrame, TweenInfo.new(1.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()

-- Glow atr√°s do Sol
local glow = Instance.new("Frame")
glow.Size = UDim2.new(0, 200, 0, 200)
glow.Position = UDim2.new(0.5, -100, 0.5, -100)
glow.BackgroundColor3 = Color3.fromRGB(255, 255, 150)
glow.BackgroundTransparency = 0.7
glow.BorderSizePixel = 0
glow.ZIndex = 0
glow.Parent = introFrame

-- Tween de pulsa√ß√£o do glow
local glowTween = TweenService:Create(glow, TweenInfo.new(1.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {BackgroundTransparency = 0.4})
glowTween:Play()

-- Sol
local sun = Instance.new("TextLabel")
sun.Size = UDim2.new(0, 100, 0, 100)
sun.Position = UDim2.new(0.5, -50, 0.5, -50)
sun.BackgroundTransparency = 1
sun.Text = "‚òÄÔ∏è"
sun.Font = Enum.Font.SourceSansBold
sun.TextScaled = true
sun.TextColor3 = Color3.fromRGB(255, 255, 0)
sun.Rotation = 0
sun.Parent = introFrame

-- Tween de crescimento e pulsa√ß√£o do Sol
local growTween = TweenService:Create(sun, TweenInfo.new(1, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, 220, 0, 220)})
growTween:Play()
growTween.Completed:Wait()

local pulseTween = TweenService:Create(sun, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {Size = UDim2.new(0, 200, 0, 200)})
pulseTween:Play()

-- Tween de movimento do Sol (em curva)
local moveTween = TweenService:Create(sun, TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.3, -100, 0.4, -100)})
moveTween:Play()

-- Rota√ß√£o infinita do Sol
local rotateTween = TweenService:Create(sun, TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, -1, true), {Rotation = 360})
rotateTween:Play()

-- Textos animados
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 60)
title.Position = UDim2.new(0.5, -200, 0.6, 20)
title.BackgroundTransparency = 1
title.Text = "Sol Animator"
title.Font = Enum.Font.SourceSansBold
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextTransparency = 1
title.Parent = introFrame

local version = Instance.new("TextLabel")
version.Size = UDim2.new(1, 0, 0, 40)
version.Position = UDim2.new(0.5, -200, 0.65, 80)
version.BackgroundTransparency = 1
version.Text = "V1"
version.Font = Enum.Font.SourceSansBold
version.TextScaled = true
version.TextColor3 = Color3.fromRGB(200, 200, 200)
version.TextTransparency = 1
version.Parent = introFrame

-- Tween de fade in + slide + bounce nos textos
TweenService:Create(title, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {TextTransparency = 0, Position = UDim2.new(0.5, -200, 0.45, 20)}):Play()
TweenService:Create(version, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {TextTransparency = 0, Position = UDim2.new(0.5, -200, 0.50, 80)}):Play()

-- Espera antes do fade out
task.wait(3)

-- Fade out sincronizado
TweenService:Create(introFrame, TweenInfo.new(1.5), {BackgroundTransparency = 1}):Play()
TweenService:Create(sun, TweenInfo.new(1.5), {TextTransparency = 1}):Play()
TweenService:Create(title, TweenInfo.new(1.5), {TextTransparency = 1}):Play()
TweenService:Create(version, TweenInfo.new(1.5), {TextTransparency = 1}):Play()
TweenService:Create(glow, TweenInfo.new(1.5), {BackgroundTransparency = 1}):Play()

task.wait(1.5)
introFrame:Destroy()
-- FRAME PRINCIPAL
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 350)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 140, 0)
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local titleMain = Instance.new("TextLabel")
titleMain.Size = UDim2.new(1, 0, 0, 40)
titleMain.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
titleMain.Text = "Sol Animator V1"
titleMain.Font = Enum.Font.SourceSansBold
titleMain.TextScaled = true
titleMain.TextColor3 = Color3.fromRGB(255, 100, 0)
titleMain.Parent = mainFrame

-- Fun√ß√£o para criar bot√µes
local function createButton(text, posX, posY)
local btn = Instance.new("TextButton")
btn.Size = UDim2.new(0, 180, 0, 50)
btn.Position = UDim2.new(0, posX, 0, posY)
btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
btn.TextColor3 = Color3.fromRGB(255, 255, 255)
btn.TextScaled = true
btn.Font = Enum.Font.SourceSansBold
btn.Text = text
btn.Parent = mainFrame
return btn
end

-- BOT√ïES PRINCIPAIS
local btnKeyFrame = createButton("KeyFrame üé¨", 10, 50)
local btnClearKeys = createButton("Clear Keys ‚ûñ", 10, 110)
local btnResetPos = createButton("Reset Posi√ß√£o üóëÔ∏è", 10, 170)
local btnPlay = createButton("Play ‚ñ∂Ô∏è", 210, 50)
local btnExport = createButton("Export", 210, 110)
local btnAura = createButton("Aura Highlight", 210, 170)

-- TOGGLE DO FRAME
local toggle = Instance.new("ImageButton")
toggle.Size = UDim2.new(0, 50, 0, 50)
toggle.Position = UDim2.new(0, 10, 0.5, -25)
toggle.Image = "rbxassetid://139954414056448"
toggle.BackgroundTransparency = 1
toggle.Active = true
toggle.Draggable = true
toggle.Parent = screenGui

local isOpen = true
toggle.MouseButton1Click:Connect(function()
isOpen = not isOpen
mainFrame.Visible = isOpen
end)
-- ===== L√ìGICA DOS KEYFRAMES =====
local keyFrames = {}
local dummy = workspace:FindFirstChild("Dummy")
if not dummy then
    warn("Nenhum Dummy encontrado!")
end

-- ===== BOT√ïES SIMULADORES DE FRAMES (ROL√ÅVEL) =====
local frameButtons = {}
local framesContainer = Instance.new("ScrollingFrame")
framesContainer.Size = UDim2.new(0, 380, 0, 100) -- altura maior para v√°rios bot√µes
framesContainer.Position = UDim2.new(0, 10, 0, 230) -- abaixo dos bot√µes principais
framesContainer.BackgroundTransparency = 0.2
framesContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
framesContainer.ScrollBarThickness = 6
framesContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
framesContainer.Parent = mainFrame

local uiLayout = Instance.new("UIListLayout")
uiLayout.FillDirection = Enum.FillDirection.Horizontal
uiLayout.Padding = UDim.new(0, 5)
uiLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
uiLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiLayout.Parent = framesContainer

-- FUN√á√ÉO PARA ATUALIZAR BOT√ïES DE FRAMES
local function updateFrameButtons()
    for _, btn in pairs(frameButtons) do
        btn:Destroy()
    end
    frameButtons = {}

    for i, _ in ipairs(keyFrames) do
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0, 60, 0, 60)
        btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.Text = "F"..i
        btn.Font = Enum.Font.SourceSansBold
        btn.TextScaled = true
        btn.Parent = framesContainer

        btn.MouseButton1Click:Connect(function()
            local frameData = keyFrames[i]
            if frameData and dummy then
                for partName, cframe in pairs(frameData) do
                    local part = dummy:FindFirstChild(partName)
                    if part then
                        TweenService:Create(part, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = cframe}):Play()
                    end
                end
            end
        end)

        table.insert(frameButtons, btn)
    end

    framesContainer.CanvasSize = UDim2.new(0, (#keyFrames * 65), 0, 0)
end

-- SALVAR KEYFRAME
btnKeyFrame.MouseButton1Click:Connect(function()
    if dummy then
        local frameData = {}
        for _, part in pairs(dummy:GetDescendants()) do
            if part:IsA("BasePart") then
                frameData[part.Name] = part.CFrame
            end
        end
        table.insert(keyFrames, frameData)
        print("KeyFrame salvo! Total:", #keyFrames)
        updateFrameButtons()
    end
end)

-- LIMPAR KEYFRAMES
btnClearKeys.MouseButton1Click:Connect(function()
    keyFrames = {}
    print("Todos os KeyFrames foram limpos!")
    updateFrameButtons()
end)

-- RESETAR POSI√á√ÉO DO DUMMY
btnResetPos.MouseButton1Click:Connect(function()
    if dummy then
        for _, part in pairs(dummy:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CFrame = CFrame.new(0, 5, 0) -- posi√ß√£o inicial do Dummy
            end
        end
        print("Dummy resetado!")
    end
end)

-- REPRODUZIR ANIMA√á√ÉO
btnPlay.MouseButton1Click:Connect(function()
    if dummy and #keyFrames > 0 then
        for _, frameData in ipairs(keyFrames) do
            for partName, cframe in pairs(frameData) do
                local part = dummy:FindFirstChild(partName)
                if part then
                    local tween = TweenService:Create(part, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = cframe})
                    tween:Play()
                end
            end
            task.wait(0.5)
        end
    end
end)

-- BOT√ÉO AURA COM HIGHLIGHT
btnAura.MouseButton1Click:Connect(function()
    if dummy then
        -- Remove highlights antigos
        for _, child in pairs(dummy:GetChildren()) do
            if child:IsA("Highlight") then
                child:Destroy()
            end
        end

        -- Cria highlight para cada BasePart
        for _, part in pairs(dummy:GetDescendants()) do
            if part:IsA("BasePart") then
                local highlight = Instance.new("Highlight")
                highlight.Adornee = part
                highlight.FillTransparency = 1 -- sem preenchimento
                highlight.OutlineColor = Color3.fromRGB(0, 0, 255) -- azul
                highlight.OutlineTransparency = 0
                highlight.Parent = part
            end
        end

        print("Aura Highlight aplicada!")
    end
end)

-- BOT√ÉO EXPORT (copia KeyFrames para clipboard)
btnExport.MouseButton1Click:Connect(function()
    local exportData = {}
    for _, frame in ipairs(keyFrames) do
        table.insert(exportData, frame)
    end
    local success, encoded = pcall(function()
        return HttpService:JSONEncode(exportData)
    end)
    if success then
        setclipboard(encoded)
        print("KeyFrames copiados para o clipboard!")
    else
        warn("Erro ao exportar KeyFrames!")
    end
end)
